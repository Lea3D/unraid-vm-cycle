Menu="Utilities"
Icon="vm-cycle.png"
Title="vm-cycle"
---
<?php
require_once "/usr/local/emhttp/plugins/dynamix.vm.manager/include/libvirt_helpers.php";

$vmcyclevmsetup = parse_ini_file("/boot/config/plugins/vm-cycle/vmcyclesettings",true);
$lv = new Libvirt('qemu:///system');
$vms = $lv->get_domains();
$gpuList = getValidGPUDevices();

$vmcyclevmsetup_vm1        = isset($vmcyclevmsetup['VM1']) ? $vmcyclevmsetup['VM1'] : "";
$vmcyclevmsetup_vm2        = isset($vmcyclevmsetup['VM2']) ? $vmcyclevmsetup['VM2'] : "";
$vmcyclevmsetup_vmdocker   = isset($vmcyclevmsetup['VMD']) ? $vmcyclevmsetup['VMD'] : "";
$vmcyclevmsetup_docker     = isset($vmcyclevmsetup['DOCKERS']) ? $vmcyclevmsetup['DOCKERS'] : "";

function getIcon($res, $uuid) {
  global $lv;
  $icon = $lv->domain_get_icon_url($res);
  if (!$icon || !file_exists("/usr/local/emhttp/" . ltrim($icon, '/'))) {
    $icon = "/plugins/dynamix.vm.manager/templates/images/question.png";
  }
  return $icon;
}

function getGpuDevices($config) {
  global $gpuList;
  $devices = [];
  if (!empty($config['gpu'])) {
    foreach ($config['gpu'] as $gpu) {
      foreach ($gpuList as $known) {
        if ($gpu['id'] == $known['id']) {
          $devices[] = [
            'name' => $known['name'],
            'id' => $gpu['id']
          ];
        }
      }
    }
  }
  return $devices;
}

function getOtherPciDevices($config, $gpuIds) {
  $devices = [];
  if (!empty($config['gpu'])) {
    foreach ($config['gpu'] as $gpu) {
      $gpuIds[] = $gpu['id'];
    }
  }
  if (!empty($config['pci'])) {
    foreach ($config['pci'] as $pci) {
      if (!in_array($pci['id'], $gpuIds)) {
        $name = trim(shell_exec("lspci -s " . escapeshellarg($pci['id']) . " | cut -d' ' -f5-"));
        $devices[] = [
          'name' => $name,
          'id' => $pci['id']
        ];
      }
    }
  }
  return $devices;
}

function getUsbNames($config) {
  $usbNames = [];
  if (!empty($config['usb'])) {
    foreach ($config['usb'] as $usb) {
      $name = $usb['name'] ?? '';
      $vendor = $usb['vendor'] ?? '';
      $product = $usb['product'] ?? '';
      if ($name) {
        $usbNames[] = $name;
      } elseif ($vendor && $product) {
        $id = strtolower(sprintf("%04x:%04x", hexdec($vendor), hexdec($product)));
        $label = trim(shell_exec("lsusb | grep $id | cut -d' ' -f7-"));
        $usbNames[] = $label ?: "$vendor:$product";
      } elseif (!empty($usb['id'])) {
        $usbNames[] = $usb['id'];
      }
    }
  }
  return implode("<br>", $usbNames);
}
?>

<div style="display: flex; justify-content: center;">
  <table class="tablesorter" style="width: 100%; max-width: 1400px; margin: 0 auto; table-layout: fixed;">
    <thead>
      <tr style="text-align: left;">
        <th style="width: 8%;">Icon</th>
        <th style="width: 14%;">VM Name</th>
        <th style="width: 8%;">Status</th>
        <th style="width: 20%;">GPU(s)</th>
        <th style="width: 20%;">GPU PCI Address(es)</th>
        <th style="width: 20%;">Other PCI Devices</th>
        <th style="width: 10%;">USB Devices</th>
      </tr>
    </thead>
    <tbody>
<?php foreach ($vms as $vm): ?>
<?php
  $res = $lv->get_domain_by_name($vm);
  $uuid = $lv->domain_get_uuid($res);
  $config = domain_to_config($uuid);
  $icon = getIcon($res, $uuid);
  $gpuDevices = getGpuDevices($config);
  $otherPciDevices = getOtherPciDevices($config, array_column($gpuDevices, 'id'));
  $usb = getUsbNames($config);
  $state = $lv->domain_state_translate($lv->domain_get_info($res)['state']);
?>
      <tr>
        <td><img src="<?= $icon ?>" class="img" style="height: 32px;"></td>
        <td><?= htmlspecialchars($vm) ?></td>
        <td><?= htmlspecialchars($state) ?></td>
        <td><?= implode("<br>", array_map(fn($d) => htmlspecialchars($d['name']), $gpuDevices)) ?></td>
        <td><?= implode("<br>", array_map(fn($d) => $d['id'], $gpuDevices)) ?></td>
        <td><?= implode("<br>", array_map(fn($d) => htmlspecialchars($d['name']) . "<br><span style='margin-left:1em;'>" . $d['id'] . "</span>", $otherPciDevices)) ?></td>
        <td><?= $usb ?></td>
      </tr>
<?php endforeach; ?>
    </tbody>
  </table>
</div>

<form markdown="1" id="form" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" id="file" name="#file" value="/boot/config/plugins/vm-cycle/vmcyclesettings" />
<input type="hidden" id="command" name="#command" value="" />

<div class="title"><span class="left"><i class="fa fa-hand-peace-o title"></i>Cycle VM vs VM</span></div>

VM 1:
: <select name="VM1" class="narrow">
    <?php foreach ($vms as $vm): ?>
        <option value="<?= $vm ?>" <?= $vm == $vmcyclevmsetup_vm1 ? 'selected' : '' ?>><?= $vm ?></option>
    <?php endforeach; ?>
  </select>
    <blockquote class='inline_help'>
        <p>set your first VM Name here to cycle, sequence doesn't matter</p>
    </blockquote>

VM 2:
: <select name="VM2" class="narrow">
    <?php foreach ($vms as $vm): ?>
        <option value="<?= $vm ?>" <?= $vm == $vmcyclevmsetup_vm2 ? 'selected' : '' ?>><?= $vm ?></option>
    <?php endforeach; ?>
  </select>
    <blockquote class='inline_help'>
        <p>set your second VM Name here to cycle, sequence doesn't matter</p>
    </blockquote>

<div style="text-align: center;">
    <input type="button" value="Apply" onClick="send('apply')">
    <input type="button" value="Cycle VMs" onClick="send('start')">
</div>

<div class="title"><span class="left"><i class="fa fa-hand-peace-o title"></i>Cycle VM vs Docker/s</span></div>

VM:
: <input type="text" name="VMD" class="narrow" maxlength="50" value="<?=$vmcyclevmsetup_vmdocker;?>" placeholder="VM Name" >
    <blockquote class='inline_help'>
        <p>set your VM Name here to cycle</p>
		<p>if the VM is running, we stop the VM, start the Dockers, if VM is off, vice versa</p>
    </blockquote>

DOCKER:
: <input type="text" name="DOCKERS" class="narrow" maxlength="50" value="<?=$vmcyclevmsetup_docker;?>" placeholder="DOCKER Name/s" >
    <blockquote class='inline_help'>
        <p>set your Docker Name/s here to cycle, space separated, sequence doesn't matter</p>
    </blockquote>

<div style="text-align: center;">
    <input type="button" value="Apply" onClick="send('apply')">
    <input type="button" value="Cycle VM Docker" onClick="send('startdocker')">
</div>

</form>

<script>
    function send(command) {
        if(command == "start"){
            document.getElementById("command").value = "/usr/local/emhttp/plugins/vm-cycle/scripts/start";
        } else if( command == "startdocker" ){
            document.getElementById("command").value = "/usr/local/emhttp/plugins/vm-cycle/scripts/startdocker";
        } else if( command == "apply" ) {
            document.getElementById("command").value = "/usr/local/emhttp/plugins/vm-cycle/scripts/apply";
        }
        document.getElementById("form").submit();
    }
</script>
